<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Color  -->
    <SolidColorBrush x:Key="ApplicationBackGround" Color="#ebebeb" />
    <SolidColorBrush x:Key="ApplicationMainColor" Color="#cdcdcd" />
    <SolidColorBrush x:Key="ApplicationMainColorHover" Color="LightGray" />
    <SolidColorBrush x:Key="BamGreen" Color="#0db02b" />
    <SolidColorBrush x:Key="BamGreenHover" Color="#0C8723" />
    <SolidColorBrush x:Key="ApplicationMainColorBorder" Color="LightGray" />

    <SolidColorBrush x:Key="DataGridMainColor" Color="#a6a6a6" />
    <SolidColorBrush x:Key="RowIsSelectedColor" Color="LightGray" />
    <SolidColorBrush x:Key="RowIsSelectedColorBorder" Color="#a6a6a6" />
    <SolidColorBrush x:Key="RowHover" Color="#e5e5e5" />
    <SolidColorBrush x:Key="RowColor" Color="#fafbfb" />

    <FontFamily x:Key="ApplicationFont">segoe ui</FontFamily>

    <!--  Datagrid styling  -->
    <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource ApplicationBackGround}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />

        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="FontFamily" Value="{StaticResource ApplicationFont}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="13" />
    </Style>


    <!--  Column Header Styling  -->
    <Style x:Key="ModernColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource DataGridMainColor}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="FontFamily" Value="{StaticResource ApplicationFont}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="20,0,0,0" />
    </Style>

    <!--  DataGrid Cell Styling  -->
    <Style x:Key="CustomCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,12,40,12" />
    </Style>

    <!--  DataGrid Status Cell Styling  -->
    <Style x:Key="StatusCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{Binding ColorSetStatusBackground, FallbackValue=#fce1fc}" />
        <Setter Property="Foreground" Value="{Binding ColorSetStatusForeground, FallbackValue=#ba65b6}" />
        <Setter Property="BorderBrush" Value="{Binding ColorSetStatusForeground, FallbackValue=#ba65b6}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Margin" Value="20,12,40,12" />
        <Setter Property="Width" Value="140" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataGrid Row Styling  -->
    <Style x:Key="CustomRowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="{StaticResource RowColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border
                        x:Name="RowBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2"
                        CornerRadius="8">
                        <Grid>
                            <DataGridCellsPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Hover Effect  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RowBorder" Property="Background" Value="{StaticResource RowHover}" />
                        </Trigger>
                        <!--  Selected Effect  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="RowBorder" Property="Background" Value="{StaticResource RowIsSelectedColor}" />
                            <Setter TargetName="RowBorder" Property="BorderBrush" Value="{StaticResource RowIsSelectedColorBorder}" />
                            <Setter TargetName="RowBorder" Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBlock Styling  -->
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ApplicationFont}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--  Label Styling  -->
    <Style TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource ApplicationFont}" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <!--  Modern Checkbox style  -->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource ApplicationMainColorBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            Width="18"
                            Height="18"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <Path
                                x:Name="checkMark"
                                Width="10"
                                Height="10"
                                Data="M 1,5 L 4,9 L 9,1"
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="2"
                                Visibility="Collapsed" />
                        </Border>
                        <ContentPresenter
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">

                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Modern Coordination Checkbox style  -->
    <Style BasedOn="{StaticResource ModernCheckBox}" TargetType="CheckBox" />
    <Style
        x:Key="CoordinationCheckBox"
        BasedOn="{StaticResource ModernCheckBox}"
        TargetType="CheckBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RowIsLocked}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Modern Approval Checkbox style  -->
    <Style
        x:Key="ApprovalCheckbox"
        BasedOn="{StaticResource ModernCheckBox}"
        TargetType="CheckBox">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLockedCutProp}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Modern Button Style  -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="black" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridMainColor}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="{StaticResource ApplicationFont}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ApplicationMainColorHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Flat ComboBox  -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border
                Name="ButtonBorder"
                Grid.Column="1"
                Margin="1,1,1,1"
                Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                BorderBrush="#444"
                BorderThickness="0,0,0,0"
                CornerRadius="8" />
            <Border
                Name="Border"
                Grid.ColumnSpan="2"
                Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                BorderBrush="{StaticResource ApplicationMainColor}"
                BorderThickness="1"
                CornerRadius="4" />
            <Path
                Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="#444" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="WhiteSmoke" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="WhiteSmoke" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF8D979E" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="Black" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter
                            Name="ContentSite"
                            Margin="5,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!--  Popup showing items  -->
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    Name="DropDownBorder"
                                    Margin="0,1,0,0"
                                    Background="White"
                                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="0" />
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RowIsLocked}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--  End of Flat ComboBox  -->


</ResourceDictionary>
